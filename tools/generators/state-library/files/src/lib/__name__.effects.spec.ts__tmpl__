import { TestBed } from '@angular/core/testing';
import { provideMockActions } from '@ngrx/effects/testing';
import { Action } from '@ngrx/store';
import { provideMockStore } from '@ngrx/store/testing';
import { NxModule } from '@nrwl/angular';
import { hot } from '@nrwl/angular/testing';
import { Observable } from 'rxjs';

import * as <%= uppercaseFirstLetter(name) %>Actions from './<%= lowercase(name) %>.actions';
import { <%= uppercaseFirstLetter(name) %>Effects } from './<%= lowercase(name) %>.effects';

describe('<%= uppercaseFirstLetter(name) %>Effects', () => {
    let actions: Observable<Action>;
    let effects: <%= uppercaseFirstLetter(name) %>Effects;

    beforeEach(() => {
        TestBed.configureTestingModule({
            imports: [NxModule.forRoot()],
            providers: [
                <%= uppercaseFirstLetter(name) %>Effects,
                provideMockActions(() => actions),
                provideMockStore(),
            ],
        });

        effects = TestBed.inject(<%= uppercaseFirstLetter(name) %>Effects);
    });

    describe('init$', () => {
        it('should work', () => {
            actions = hot('-a-|', { a: <%= uppercaseFirstLetter(name) %>Actions.load<%= uppercaseFirstLetter(name) %> });

            // eslint-disable-next-line @typescript-eslint/typedef
            const expected = hot('-a-|', {
                a: <%= uppercaseFirstLetter(name) %>Actions.load<%= uppercaseFirstLetter(name) %>Success({ <%= lowercase(name) %>: [] }),
            });

            expect(effects.init$).toBeObservable(expected);
        });
    });
});
